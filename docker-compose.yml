version: '3.8'

services:
  db:
    image: postgres:15
    container_name: db
    environment:
      - POSTGRES_DB=django_todo
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=7712
    ports:
      - '5432:5432'
    volumes:
      - pg_data:/var/lib/postgresql/data

  web:
    build:
        context: .
        dockerfile: ./Dockerfile
    container_name: django
    ports:
      - '8000:8000'
    volumes:
      - .:/app
    environment:
      - DJANGO_ENV=${DJANGO_ENV}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=db  # Ensure this matches the PostgreSQL service name
      - DATABASE_PORT=${DATABASE_PORT}
      - BASE_URL=${BASE_URL}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - db  # Ensure this matches the PostgreSQL service name
      - redis

  celery:
    build:
        context: .
        dockerfile: ./Dockerfile
    command: celery -A backend worker --loglevel=info
    volumes:
      - .:/app
    environment:
      - DJANGO_ENV=${DJANGO_ENV}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=db  # Ensure this matches the PostgreSQL service name
      - DATABASE_PORT=${DATABASE_PORT}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - web
      - redis  

  celery-beat:
    build:
        context: .
        dockerfile: ./Dockerfile
    command: celery -A backend beat --loglevel=info
    volumes:
      - .:/app
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - DJANGO_ENV=${DJANGO_ENV}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=db  # Ensure this matches the PostgreSQL service name
      - DATABASE_PORT=${DATABASE_PORT}
    depends_on:
      - web
      - redis  

  redis:
        restart: unless-stopped
        image: redis:7.0.5-alpine 
        expose:
            - 6379


volumes:
  pg_data:
